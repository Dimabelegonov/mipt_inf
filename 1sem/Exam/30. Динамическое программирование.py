"""
Динамическое программирование — это подход к решению задач, который основывается на том,
что исходная задача разбивается на более мелкие подзадачи, которые проще решить. И потом
решения этих подзадач можно использовать для решения исходной задачи.
"""
"""
Найдём числа Фибонначи:
"""

"""
Рекурентный способ:
"""


def func(a):
    return 1 if a < 2 else func(a - 1) + func(a - 2)


print(func(int(input())))

"""
Способ через ДП:
"""


# ДП СНИЗУ
def func(a):
    s = [1, 1]
    for i in range(2, a + 1):
        s.append(s[i - 1] + s[i - 2])
    return s[a]


print(func(int(input())))


# ДП СВЕРХУ (Рекурсия с мемоизацией)

def func(a, s):
    if a < 2:
        return 1
    else:
        if a not in s:
            s.append(func(a - 1, s) + func(a - 2, s))
        return s[a]


a = int(input())
print(func(a, [1, 1]))
